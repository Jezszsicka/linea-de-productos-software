// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `ServerPrx.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package IServer;

public interface ServerPrx extends Ice.ObjectPrx
{
    public void registerUser(String username, String password, String email)
        throws UserAlreadyExistsException;

    public void registerUser(String username, String password, String email, java.util.Map<String, String> __ctx)
        throws UserAlreadyExistsException;

    public Ice.AsyncResult begin_registerUser(String username, String password, String email);

    public Ice.AsyncResult begin_registerUser(String username, String password, String email, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_registerUser(String username, String password, String email, Ice.Callback __cb);

    public Ice.AsyncResult begin_registerUser(String username, String password, String email, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_registerUser(String username, String password, String email, Callback_Server_registerUser __cb);

    public Ice.AsyncResult begin_registerUser(String username, String password, String email, java.util.Map<String, String> __ctx, Callback_Server_registerUser __cb);

    public void end_registerUser(Ice.AsyncResult __result)
        throws UserAlreadyExistsException;

    public void loginUser(String username, String password, Ice.Identity client)
        throws InvalidLoggingException,
               UserAlreadyLoggedException;

    public void loginUser(String username, String password, Ice.Identity client, java.util.Map<String, String> __ctx)
        throws InvalidLoggingException,
               UserAlreadyLoggedException;

    public Ice.AsyncResult begin_loginUser(String username, String password, Ice.Identity client);

    public Ice.AsyncResult begin_loginUser(String username, String password, Ice.Identity client, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_loginUser(String username, String password, Ice.Identity client, Ice.Callback __cb);

    public Ice.AsyncResult begin_loginUser(String username, String password, Ice.Identity client, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_loginUser(String username, String password, Ice.Identity client, Callback_Server_loginUser __cb);

    public Ice.AsyncResult begin_loginUser(String username, String password, Ice.Identity client, java.util.Map<String, String> __ctx, Callback_Server_loginUser __cb);

    public void end_loginUser(Ice.AsyncResult __result)
        throws InvalidLoggingException,
               UserAlreadyLoggedException;

    public void logoutUser(String username)
        throws UserNotLoggedException;

    public void logoutUser(String username, java.util.Map<String, String> __ctx)
        throws UserNotLoggedException;

    public Ice.AsyncResult begin_logoutUser(String username);

    public Ice.AsyncResult begin_logoutUser(String username, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_logoutUser(String username, Ice.Callback __cb);

    public Ice.AsyncResult begin_logoutUser(String username, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_logoutUser(String username, Callback_Server_logoutUser __cb);

    public Ice.AsyncResult begin_logoutUser(String username, java.util.Map<String, String> __ctx, Callback_Server_logoutUser __cb);

    public void end_logoutUser(Ice.AsyncResult __result)
        throws UserNotLoggedException;

    public void sendPrivateMessage(String sender, String destinatary, String message);

    public void sendPrivateMessage(String sender, String destinatary, String message, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_sendPrivateMessage(String sender, String destinatary, String message);

    public Ice.AsyncResult begin_sendPrivateMessage(String sender, String destinatary, String message, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_sendPrivateMessage(String sender, String destinatary, String message, Ice.Callback __cb);

    public Ice.AsyncResult begin_sendPrivateMessage(String sender, String destinatary, String message, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_sendPrivateMessage(String sender, String destinatary, String message, Callback_Server_sendPrivateMessage __cb);

    public Ice.AsyncResult begin_sendPrivateMessage(String sender, String destinatary, String message, java.util.Map<String, String> __ctx, Callback_Server_sendPrivateMessage __cb);

    public void end_sendPrivateMessage(Ice.AsyncResult __result);

    public void sendMessage(String sender, String message);

    public void sendMessage(String sender, String message, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_sendMessage(String sender, String message);

    public Ice.AsyncResult begin_sendMessage(String sender, String message, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_sendMessage(String sender, String message, Ice.Callback __cb);

    public Ice.AsyncResult begin_sendMessage(String sender, String message, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_sendMessage(String sender, String message, Callback_Server_sendMessage __cb);

    public Ice.AsyncResult begin_sendMessage(String sender, String message, java.util.Map<String, String> __ctx, Callback_Server_sendMessage __cb);

    public void end_sendMessage(Ice.AsyncResult __result);

    public java.util.List<java.lang.String> chatParticipants();

    public java.util.List<java.lang.String> chatParticipants(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_chatParticipants();

    public Ice.AsyncResult begin_chatParticipants(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_chatParticipants(Ice.Callback __cb);

    public Ice.AsyncResult begin_chatParticipants(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_chatParticipants(Callback_Server_chatParticipants __cb);

    public Ice.AsyncResult begin_chatParticipants(java.util.Map<String, String> __ctx, Callback_Server_chatParticipants __cb);

    public java.util.List<java.lang.String> end_chatParticipants(Ice.AsyncResult __result);
}
